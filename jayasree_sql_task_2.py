# -*- coding: utf-8 -*-
"""DE_TASK2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xunMJYxm4pM4-YHfy0F1f2xjI9lBY6_-
"""

# Commented out IPython magic to ensure Python compatibility.
# %load_ext sql
# %sql sqlite://

# Commented out IPython magic to ensure Python compatibility.
# #creating Table
# %%sql
# create table if not exists workers(
#     id int(50),
#     first_name varchar(50),
#     last_name varchar(50),
#     email varchar(100),
#     department varchar(20),
#     salary int(15),
#     join_date DATE
# );

# Commented out IPython magic to ensure Python compatibility.
# %%sql
# insert into workers
# values(1,'Jayasree','varadarajan','jayasreevaradhan@gmail.com','Data engineering',250000,'march-21');
# insert into workers
# values(2,'akhil','kumar','akhilkum67@gmail.com','data science',67000,'june-22');
# insert into workers
# values(3,'janavi','singh','janavisingh@gmail.com','data science',67000,'june-22');
# insert into workers
# values(4,'anitha','kumari','anithakumari@gmail.com','teaching',60000,'june-22');
# insert into workers
# values(5,'anusha','sharma','anushasharma@gmail.com','law',500900,'nov-21');
# insert into workers
# values(6,'santhosh','kumar','santhosh.sharma@gmail.com','tailor',505000,'january-06');
# insert into workers
# values(7,'Ramesh','kannan','ramesh.kanna@gmail.com','business',347009,'october-13');
# insert into workers
# values(8,'aruna','sathish','arunasathish@gmail.com','tailoring',500000,'febuary-16');
# insert into workers
# values(9,'Bapu','kiran','bapukiran@gmail.com','mining',350000,'august-15');
# insert into workers
# values(10,'vijay','krishna','vijaykrishna@gmail.com','engineer',400000,'july-19');
# insert into workers
# values(11,'gopal','banda','gopalbanda@gmail.com','lawyer',650000,'december-12');
# insert into workers
# values(12,'greeshma','katukuri','greeshmakatukuri@gmail.com','developing',500000,'september-18');
# insert into workers
# values(13,'jyothi','polasa','jyothipolasa@gmail.com','testing',500000,'october-20');
# insert into workers
# values(14,'jyothi','veskamalla','jyothiveskaalla@gmail.com','ca',50000,'june-21');
# insert into workers
# values(15,'kamala','raja','kamalaraja@gmail.com','science',760000,'may-09');
# insert into workers
# values(16,'kishan','mula','kishanmula@gmail.com','agriculture',500000,'september-15');
# insert into workers
# values(17,'lakshmi','mula','lakshmimula@gmail.com','medical',400000,'november-18');
# insert into workers
# values(18,'madhan','mohan','madhanmohan@gmail.com','science',64000,'december-22');
# insert into workers
# values(19,'mounika','banda','mounikabanda@gmil.com','testing',400000,'july-11');
# insert into workers
# values(20,'niharika','chinthala','niharikachinthala@gmail.com','actor',100000,'march-21');
# insert into workers
# values(21,'prabhu','raj','prabhuraj@gmail.com','acting',600000,'september-22');
# insert into workers
# values(22,'Prajumna','kaluva','prajumnakaluva@gmail.com','cloud',600000,'december-22');
# insert into workers
# values(23,'Prathyu','reddy','prathyushareddy@gmail.com','Data Science',1500000,'july-07');
# insert into workers
# values(24,'Prathyusha','katukuri','prathyushakatukuri@gmail.com','data engineering',2500000,'january-16');
# insert into workers
# values(25,'rahul','katukuri','rahulkatukuri@gmail.com','defence',130000,'august-22');
# insert into workers
# values(26,'Raju','upallapati','prabhasupalapati@gmail.com','acting',2000000,'march-21');
# insert into workers
# values(27,'rama','katukuri','ramakatukuri@gmail.com','medical',300000,'june-22');
# insert into workers
# values(28,'anitha','reddy','anithareddy@gmail.com','teaching',60000,'june-22');
# insert into workers
# values(29,'anusha','shetty','anushashetty@gmail.com','law',500900,'nov-21');
# insert into workers
# values(30,'santhosh','reddy','aruna@gmail.com','tailor',505000,'january-06');
# insert into workers
# values(31,'Ramesh','banda','arunabanda@gmail.com','business',347009,'october-13');
# insert into workers
# values(32,'aruna','reddy','arunareddy@gmail.com','tailoring',500000,'febuary-16');
# insert into workers
# values(33,'Bapu','Mula','bapumula@gmail.com','mining',350000,'august-15');
# insert into workers
# values(34,'damodher','katukuri','damodherkatukuri@gmail.com','engineer',400000,'july-19');
# insert into workers
# values(35,'gopal','banda','gopalbanda@gmail.com','lawyer',650000,'december-12');
# insert into workers
# values(36,'jyothi','veskamalla','jyothiveskaalla@gmail.com','ca',50000,'june-21');
# insert into workers
# values(37,'kamala','raja','kamalaraja@gmail.com','science',760000,'may-09');
# insert into workers
# values(38,'kishan','mula','kishanmula@gmail.com','agriculture',500000,'september-15');
# insert into workers
# values(39,'lakshmi','priya','lakshmipriya@gmail.com','medical',400000,'november-18');
# insert into workers
# values(40,'madhan','mohan','madhanmohan@gmail.com','science',64000,'december-22');
# insert into workers
# values(41,'mounika','michael','mounika@gmil.com','testing',400000,'july-11');
# insert into workers
# values(42,'niharika','chinthala','niharikachinthala@gmail.com','actor',100000,'march-21');
# insert into workers
# values(43,'mounika','banda','mounikabanda@gmil.com','testing',400000,'july-11');
# insert into workers
# values(44,'niharika','chinthala','niharikachinthala@gmail.com','actor',100000,'march-21');
# insert into workers
# values(45,'prabhu','raj','prabhuraj@gmail.com','acting',600000,'september-22');
# insert into workers
# values(46,'Prajumna','kaluva','prajumnakaluva@gmail.com','cloud',600000,'december-22');
# insert into workers
# values(47,'Prathyu','reddy','prathyushareddy@gmail.com','Data Science',1500000,'july-07');
# insert into workers
# values(48,'Prathyusha','katukuri','prathyushakatukuri@gmail.com','data engineering',2500000,'january-16');
# insert into workers
# values(49,'rahul','katukuri','rahulkatukuri@gmail.com','defence',130000,'august-22');
# insert into workers
# values(50,'Raju','upallapati','prabhasupalapati@gmail.com','acting',2000000,'march-21');

# Commented out IPython magic to ensure Python compatibility.
# %%sql
# select count(*)
# from workers

# Commented out IPython magic to ensure Python compatibility.
# #Task 1.1
# 
# %%sql
# select first_name as worker_name
# from workers;

# Commented out IPython magic to ensure Python compatibility.
# # Task 1.2
# 
# %%sql
# select distinct department
# from workers;



# Commented out IPython magic to ensure Python compatibility.
# # Task 1.3
# 
# %%sql
# select *
# from workers
# order by id desc
# limit 10

# Commented out IPython magic to ensure Python compatibility.
# # Task 2.1
# 
# %%sql
# select SUBSTR(first_name,1,3)
# from workers;

# Commented out IPython magic to ensure Python compatibility.
# # Task 1.3
# 
# %%sql
# select first_name, instr(first_name,'a') as positio_of_a
# from workers

# Commented out IPython magic to ensure Python compatibility.
# # Task 2.3
# 
# %%sql
# select department, first_name,last_name,max(salary)
# from workers
# group by department

# Commented out IPython magic to ensure Python compatibility.
# # Task 3.2
# 
# %%sql
# select rtrim(first_name)
# from workers

# Commented out IPython magic to ensure Python compatibility.
# # Task 3.2
# 
# %%sql
# select distinct length(department) as unique_department_length
# from workers;

# Commented out IPython magic to ensure Python compatibility.
# # Task 3.3
# 
# %%sql
# select * 
# from workers w1
# where(1)=(
# select count(distinct(w2.salary))
# from workers w2
# where w2.salary> w1.salary);

# Commented out IPython magic to ensure Python compatibility.
# #Task 4.1
# 
# %%sql
# select REPLACE(first_name,'a','A') as "replace name"
# from workers

# Commented out IPython magic to ensure Python compatibility.
# # Task 4.2
# 
# %%sql
# select *
# from workers
# order by first_name asc , department desc

# Commented out IPython magic to ensure Python compatibility.
# # Task 4.3
# 
# %%sql
# select first_name,last_name, max(salary)
# from workers

# Commented out IPython magic to ensure Python compatibility.
# # TASK 5.1
# 
# %%sql
# select *
# from workers
# where first_name  not in ('Ramesh', 'Kumar')

# Commented out IPython magic to ensure Python compatibility.
# # Task 5.2
# 
# %%sql
# select *
# from workers
# where first_name like '_____h'

# Commented out IPython magic to ensure Python compatibility.
# #Task 5.3
# 
# %%sql
# select *, first_name||last_name||'@guvi.com'as new_email
# from workers

# Commented out IPython magic to ensure Python compatibility.
# # Task 6.1
# %%sql
# select *
# from workers
# where join_date = 'march-21'

# Commented out IPython magic to ensure Python compatibility.
# # Task 6.2
# %%sql
# select  first_name,last_name,email,count(*)
# from workers
# group by first_name,last_name
# having count(*)>1

# Commented out IPython magic to ensure Python compatibility.
# #Task 6.3
# 
# %%sql
# select *
# from workers
# group by first_name,last_name
# having count(*)>1;

# Commented out IPython magic to ensure Python compatibility.
# # Task 7.1
# 
# %%sql
# select * 
# from workers
# where id%2==0;

# Commented out IPython magic to ensure Python compatibility.
# #Task 7.2 
# 
# %%sql
# create table new_table as
# select * from workers

# Commented out IPython magic to ensure Python compatibility.
# %%sql
# select * 
# from new_table

# Commented out IPython magic to ensure Python compatibility.
# # Task 8.1
# 
# %%sql 
# select * 
# from workers
# 
# intersect
# 
# select * 
# from new_table

# Commented out IPython magic to ensure Python compatibility.
# #creating Table
# %%sql
# create table if not exists employee(
#     id int(50),
#     first_name varchar(50),
#     last_name varchar(50),
#     email varchar(100),
#     department varchar(20),
#     salary int(15),
#     join_date DATE
# );

# Commented out IPython magic to ensure Python compatibility.
# %%sql
# insert into employee
# values(1,'vani','reddy','vani@gmail.com','computer science',340000,'march-03');

# Commented out IPython magic to ensure Python compatibility.
# # Task 8.2
# %%sql
# select *
# from workers
# where not exists
# (
#     select *
#     from employee
#     where workers.id = employee.id);

# Commented out IPython magic to ensure Python compatibility.
# # Task 9.1
# %%sql
# select *
# from workers
# limit 10;

# Commented out IPython magic to ensure Python compatibility.
# 
# # Task 9.2
# %%sql
# select *
# from workers
# order by salary desc
# limit 10

# Commented out IPython magic to ensure Python compatibility.
# # Task 10.1
# %%sql
# select *
# from workers w1
# where 8-1 =(select count(distinct salary) from workers w2
# where w2.salary>w1.salary)

# Commented out IPython magic to ensure Python compatibility.
# # Task 10.2
# %%sql
# select * 
# from workers
# where salary in(
#     select salary 
#     from workers
#     group by salary
#     having count(*)>1
# )